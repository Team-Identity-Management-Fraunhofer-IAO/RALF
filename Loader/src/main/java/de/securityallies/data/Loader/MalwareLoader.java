package de.securityallies.data.Loader;

import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.List;

import javax.persistence.NoResultException;
import org.hibernate.Transaction;

import org.hibernate.Session;
import org.hibernate.query.NativeQuery;

import de.securityallies.taxii2.Taxii2Client.data.stix.Malware;
import de.securityallies.taxii2.Taxii2Client.data.stix.MarkingDefinition;
import de.securityallies.taxii2.Taxii2Client.data.stix.Reference;

import com.sql.hibernate.HibernateThreatMasterLoaderInstance;

public class MalwareLoader {
	private HibernateThreatMasterLoaderInstance hibernateThreatMasterLoaderInstance;
	
	public void loadMalware(List<Malware> malwareList, String collection_id, Timestamp timestamp) {
		Session session = hibernateThreatMasterLoaderInstance.getSessionFactory().openSession();
		for (Malware malware : malwareList) {
			Transaction tx = session.beginTransaction();
			String sql = "SELECT malware_id FROM H_MALWARE WHERE id=:id AND collection_id=:collection_id";
			NativeQuery<Integer> query = session.createNativeQuery(sql);
			query.setParameter("id", malware.getId());
			query.setParameter("collection_id", collection_id);
			Integer malware_id = null;
			try {
				malware_id = query.getSingleResult();
			} catch (NoResultException ex) {
				sql = "INSERT INTO H_MALWARE (id,collection_id,loadTimestamp) VALUES(:id,:collection_id,:loadTimestamp)";
				query = session.createNativeQuery(sql);
				query.setParameter("id", malware.getId());
				query.setParameter("collection_id", collection_id);
				query.setParameter("loadTimestamp", timestamp);
				query.executeUpdate();
				sql = "SELECT LAST_INSERT_ID()";
				NativeQuery<BigInteger> lastIDQuery = session.createNativeQuery(sql);
				BigInteger last_malware_id = lastIDQuery.getSingleResult();
				malware_id = last_malware_id.intValueExact();
			}
			sql = "SELECT malware_id FROM S_MALWARE WHERE malware_id=:malware_id AND name=:name AND modified=:modified AND created=:created AND description=:description AND x_mitre_version=:x_mitre_version";
			query = session.createNativeQuery(sql);
			query.setParameter("malware_id", malware_id);
			query.setParameter("name",malware.getName());
			query.setParameter("modified", malware.getModified());
			query.setParameter("created", malware.getCreated());
			query.setParameter("description", malware.getDescription());
			query.setParameter("x_mitre_version", malware.getX_mitre_version());
			try {
				malware_id = query.getSingleResult();
			} catch (NoResultException ex) {
				sql = "INSERT INTO S_MALWARE (malware_id,loadTimestamp,name,modified,created,description,x_mitre_version) VALUES(:malware_id,:loadTimestamp,:name,:modified,:created,:description,:x_mitre_version)";
				query = session.createNativeQuery(sql);
				query.setParameter("malware_id", malware_id);
				query.setParameter("loadTimestamp", timestamp);
				query.setParameter("name",malware.getName());
				query.setParameter("modified", malware.getModified());
				query.setParameter("created", malware.getCreated());
				query.setParameter("description", malware.getDescription());
				query.setParameter("x_mitre_version", malware.getX_mitre_version());
				query.executeUpdate();
						
			}
			tx.commit();
			tx = session.beginTransaction();
			//References
			if (malware.getReferences() != null) {
				for (Reference reference : malware.getReferences()) {
					sql = "SELECT reference_id FROM H_REFERENCE WHERE collection_id=:collection_id AND source_name=:source_name AND external_id=:external_id AND url=:url AND description=:description";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("source_name", reference.getSource_name());
					query.setParameter("external_id", reference.getExternal_id());
					query.setParameter("url", reference.getUrl());
					query.setParameter("description", reference.getDescription());
					Integer reference_id = null;
					try {
						reference_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO H_REFERENCE (loadTimestamp,collection_id,source_name,external_id,url,description) VALUES(:loadTimestamp,:collection_id,:source_name,:external_id,:url,:description)";
						query = session.createNativeQuery(sql);
						query.setParameter("loadTimestamp", timestamp);
						query.setParameter("collection_id", collection_id);
						query.setParameter("source_name", reference.getSource_name());
						query.setParameter("external_id", reference.getExternal_id());
						query.setParameter("url", reference.getUrl());
						query.setParameter("description", reference.getDescription());
						query.executeUpdate();
						sql = "SELECT LAST_INSERT_ID()";
						NativeQuery<BigInteger> lastIDQuery = session.createNativeQuery(sql);
						BigInteger last_reference_id = lastIDQuery.getSingleResult();
						reference_id = last_reference_id.intValueExact();
					}
					sql = "SELECT l_malware_reference_id FROM L_MALWARE_REFERENCE WHERE collection_id=:collection_id AND malware_id=:malware_id AND reference_id=:reference_id";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("malware_id", malware_id);
					query.setParameter("reference_id", reference_id);
					try {
						Integer l_malware_reference_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO L_MALWARE_REFERENCE (loadTimestamp,collection_id,malware_id,reference_id) VALUES(:loadTimestamp,:collection_id,:malware_id,:reference_id)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("malware_id", malware_id);
						query.setParameter("reference_id", reference_id);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
					}
				}
			}
			tx.commit();
			tx = session.beginTransaction();
			//platforms
			if (malware.getX_mitre_platforms() != null) {
				for (String platform : malware.getX_mitre_platforms()) {
					sql = "SELECT x_mitre_platforms_id FROM H_X_MITRE_PLATFORMS WHERE collection_id=:collection_id AND x_mitre_platform=:x_mitre_platform";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("x_mitre_platform", platform);
					Integer x_mitre_platforms_id = null;
					try {
						x_mitre_platforms_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO H_X_MITRE_PLATFORMS (collection_id,loadTimestamp,x_mitre_platform) VALUES(:collection_id,:loadTimestamp,:x_mitre_platform)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("x_mitre_platform", platform);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
						sql = "SELECT LAST_INSERT_ID()";
						NativeQuery<BigInteger> lastIDQuery = session.createNativeQuery(sql);
						BigInteger last_x_mitre_platforms_id = lastIDQuery.getSingleResult();
						x_mitre_platforms_id = last_x_mitre_platforms_id.intValueExact();
					}
					sql = "SELECT l_malware_x_mitre_platforms_id FROM L_MALWARE_X_MITRE_PLATFORMS WHERE collection_id=:collection_id AND malware_id=:malware_id AND x_mitre_platforms_id=:x_mitre_platforms_id";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("malware_id", malware_id);
					query.setParameter("x_mitre_platforms_id", x_mitre_platforms_id);
					try {
						Integer l_malware_x_mitre_platforms_id = query.getSingleResult();
					}catch (NoResultException ex) {
						sql = "INSERT INTO L_MALWARE_X_MITRE_PLATFORMS (loadTimestamp,collection_id,malware_id,x_mitre_platforms_id) VALUES(:loadTimestamp,:collection_id,:malware_id,:x_mitre_platforms_id)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("malware_id", malware_id);
						query.setParameter("x_mitre_platforms_id", x_mitre_platforms_id);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
					}
				}
			}
			tx.commit();
			tx = session.beginTransaction();
			//labels
			if (malware.getLabels() != null) {
				for (String label : malware.getLabels()) {
					sql = "SELECT labels_id FROM H_LABELS WHERE collection_id = :collection_id AND label = :label";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("label", label);
					Integer labels_id = null;
					try {
						labels_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO H_LABELS (loadTimestamp,collection_id,label) VALUES(:loadTimestamp,:collection_id,:label)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("label", label);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
						sql = "SELECT LAST_INSERT_ID()";
						NativeQuery<BigInteger> lastIDQuery = session.createNativeQuery(sql);
						BigInteger last_labels_id = lastIDQuery.getSingleResult();
						labels_id = last_labels_id.intValueExact();
					}
					sql = "SELECT l_malware_labels_id FROM L_MALWARE_LABELS WHERE collection_id=:collection_id AND malware_id=:malware_id AND labels_id=:labels_id";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("malware_id", malware_id);
					query.setParameter("labels_id", labels_id);
					try {
						Integer l_malware_labels_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO L_MALWARE_LABELS (loadTimestamp,collection_id,malware_id,labels_id) VALUES(:loadTimestamp,:collection_id,:malware_id,:labels_id)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("malware_id", malware_id);
						query.setParameter("labels_id", labels_id);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
					}
				}
			}
			tx.commit();
			tx = session.beginTransaction();
			//aliases
			if (malware.getX_mitre_aliases() != null) {
				for (String alias : malware.getX_mitre_aliases()) {
					sql = "SELECT alias_id FROM H_ALIASES WHERE collection_id=:collection_id AND alias=:alias";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("alias", alias);
					Integer alias_id = null;
					try {
						alias_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO H_ALIASES (collection_id,loadTimestamp,alias) VALUES(:collection_id,:loadTimestamp,:alias)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("loadTimestamp", timestamp);
						query.setParameter("alias", alias);
						query.executeUpdate();
						sql = "SELECT LAST_INSERT_ID()";
						NativeQuery<BigInteger> lastIDQuery = session.createNativeQuery(sql);
						BigInteger last_alias_id = lastIDQuery.getSingleResult();
						alias_id = last_alias_id.intValueExact();
					}
					sql = "SELECT l_malware_aliases_id FROM L_MALWARE_ALIASES WHERE collection_id=:collection_id AND alias_id=:alias_id AND malware_id=:malware_id";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("alias_id", alias_id);
					query.setParameter("malware_id", malware_id);
					try {
						Integer l_malware_aliases_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO L_MALWARE_ALIASES (collection_id,alias_id,malware_id,loadTimestamp) VALUES(:collection_id,:alias_id,:malware_id,:loadTimestamp)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("alias_id", alias_id);
						query.setParameter("malware_id", malware_id);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
					}
				}
			}
			tx.commit();
			tx = session.beginTransaction();
			//marking_definition
			if (malware.getObject_marking_refs() != null) {
				for (MarkingDefinition markingDefinition : malware.getObject_marking_refs()) {
					sql = "SELECT marking_definition_id FROM H_MARKING_DEFINITION WHERE collection_id=:collection_id AND id=:id";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("id", markingDefinition.getId());
					Integer marking_definition_id = null;
					try {
						marking_definition_id = query.getSingleResult();
					}catch (NoResultException ex) {
						System.err.println("Marking Definition for Malware "+malware.getId()+" not found!");
					}
					if (marking_definition_id != null) {
						sql = "SELECT l_malware_marking_definition_id FROM L_MALWARE_MARKING_DEFINITION WHERE collection_id=:collection_id AND malware_id=:malware_id AND marking_definition_id=:marking_definition_id";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("malware_id", malware_id);
						query.setParameter("marking_definition_id", marking_definition_id);
						try {
							Integer l_malware_marking_definition_id = query.getSingleResult();
						} catch (NoResultException ex) {
							sql = "INSERT INTO L_MALWARE_MARKING_DEFINITION (collection_id,loadTimestamp,malware_id,marking_definition_id) VALUES(:collection_id,:loadTimestamp,:malware_id,:marking_definition_id)";
							query = session.createNativeQuery(sql);
							query.setParameter("collection_id", collection_id);
							query.setParameter("malware_id", malware_id);
							query.setParameter("marking_definition_id", marking_definition_id);
							query.setParameter("loadTimestamp", timestamp);
							query.executeUpdate();
						}
					}
				}
			}
			tx.commit();
			tx = session.beginTransaction();
			//identity
			if (malware.getCreated_by_ref() != null) {
				sql = "SELECT identity_id FROM H_IDENTITY WHERE id=:id AND collection_id=:collection_id";
				query = session.createNativeQuery(sql);
				query.setParameter("id", malware.getCreated_by_ref().getId());
				query.setParameter("collection_id", collection_id);
				Integer identity_id = null;
				try {
					identity_id = query.getSingleResult();
				}catch (NoResultException ex) {
					System.err.println("Identity of Malware "+malware.getId()+" does not exist!");
				}
				if (identity_id != null) {
					sql = "SELECT l_malware_identity_id FROM L_MALWARE_IDENTITY WHERE collection_id = :collection_id AND malware_id = :malware_id AND identity_id = :identity_id";
					query = session.createNativeQuery(sql);
					query.setParameter("collection_id", collection_id);
					query.setParameter("malware_id", malware_id);
					query.setParameter("identity_id", identity_id);
					try {
						Integer l_malware_identity_id = query.getSingleResult();
					} catch (NoResultException ex) {
						sql = "INSERT INTO L_MALWARE_IDENTITY (loadTimestamp,collection_id,malware_id,identity_id) VALUES(:loadTimestamp,:collection_id,:malware_id,:identity_id)";
						query = session.createNativeQuery(sql);
						query.setParameter("collection_id", collection_id);
						query.setParameter("malware_id", malware_id);
						query.setParameter("identity_id", identity_id);
						query.setParameter("loadTimestamp", timestamp);
						query.executeUpdate();
					}
				}
			}
			tx.commit();
		}
	}

}
