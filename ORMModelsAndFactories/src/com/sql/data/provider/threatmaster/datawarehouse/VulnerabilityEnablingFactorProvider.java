package com.sql.data.provider.threatmaster.datawarehouse;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.query.NativeQuery;

import com.sql.data.objects.persistence.threatmaster.datawarehouse.VulnerabilityEnablingFactor;
import com.sql.data.provider.PersistenceObjectProvider;
import com.sql.data.provider.PersistenceObjectProviderService;

public class VulnerabilityEnablingFactorProvider extends PersistenceObjectProvider<VulnerabilityEnablingFactor> implements PersistenceObjectProviderService<VulnerabilityEnablingFactor> {

	@Override
	public Class<VulnerabilityEnablingFactor> getClassName() {
		// TODO Auto-generated method stub
		return null;
	}
	
	public VulnerabilityEnablingFactor find(int id) {
		super.instantiateHibernateThreatMasterLoaderSessionFactory();
		return super.find(id);
	}
	
	public void persist(VulnerabilityEnablingFactor obj) {
		super.instantiateHibernateThreatMasterLoaderSessionFactory();
		super.persist(obj);
	}
	
	public void delete(VulnerabilityEnablingFactor obj) {
		super.instantiateHibernateThreatMasterLoaderSessionFactory();
		super.delete(obj);
	}

	public List<VulnerabilityEnablingFactor> getAllVulnerabilityEnablingFactors(){
		super.instantiateHibernateThreatMasterLoaderSessionFactory();
		Session session = super.getHibernateSessionFactory().openSession();
		String sql = "SELECT * FROM C_VULNERABILITY_ENABLING_FACTOR";
		NativeQuery<VulnerabilityEnablingFactor> query = session.createNativeQuery(sql, VulnerabilityEnablingFactor.class);
		List<VulnerabilityEnablingFactor> objs = query.list();
		session.close();
		return objs;
	}


}
